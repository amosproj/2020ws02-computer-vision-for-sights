# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Amos-gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QPushButton, QLabel, QStatusBar, QMenuBar, QMessageBox, QComboBox, QApplication, QMainWindow
from PyQt5.QtGui import QPixmap, QIcon
from PyQt5.QtCore import Qt, QCoreApplication, QRect, QMetaObject

class Image_Label(QLabel):

    image_name = "logo.png"

    def __init__(self, parent):
        super().__init__(parent)

        self.setText("")
        self.setPixmap(QPixmap("logo.png"))
        self.setScaledContents(True)
        self.setObjectName("Label_Bild")
        self.setAlignment(QtCore.Qt.AlignCenter)

    def dragEnterEvent(self, event):
        if event.mimeData().hasImage:
            event.accept()
        else:
            event.ignore()

    def dragMoveEvent(self, event):
        if event.mimeData().hasImage:
            event.accept()
        else:
            event.ignore()

    def dropEvent(self, event):
        if event.mimeData().hasImage:
            event.setDropAction(Qt.CopyAction)
            self.image_name = event.mimeData().urls()[0].toLocalFile()
            self.setPixmap(QPixmap(self.image_name))
            self.setStyleSheet("")
            event.accept()
        else:
            event.ignore()

class UI_MainWindow(QWidget):
    window_width = 800
    window_height = 650
    button_width = 180
    button_height = 50
    dist = 30

    def __init__(self, parent):
        super().__init__(parent)

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(self.window_width, self.window_height)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.Box_Stadt = QComboBox(self.centralwidget)
        self.Box_Stadt.setGeometry(QRect(self.dist, self.dist, self.button_width, self.button_height))
        self.Box_Stadt.setObjectName("Box_Stadt")
        self.Box_Stadt.addItem("")
        self.Box_Stadt.addItem("")
        self.Box_Stadt.activated.connect(self.show_popup)

        self.Button_Detection = QPushButton(self.centralwidget)
        self.Button_Detection.setGeometry(QRect(self.window_width-(self.dist+self.button_width), self.window_height-(self.dist+self.button_height), self.button_width, self.button_height))
        self.Button_Detection.setObjectName("Button_Detection")
        self.Button_Detection.clicked.connect(self.start_detection)

        self.Button_Bild = QPushButton(self.centralwidget)
        self.Button_Bild.setGeometry(QRect(self.dist, self.window_height-(self.dist+self.button_height), self.button_width, self.button_height))
        self.Button_Bild.setObjectName("Button_Bild")
        self.Button_Bild.clicked.connect(self.dragdrop)

        self.Label_Bild = Image_Label(self.centralwidget)
        label_height = (self.window_height - self.dist - self.button_height - self.dist) - (self.dist + self.button_height + self.dist)
        label_startY = self.dist + self.button_height + self.dist
        self.Label_Bild.setGeometry(QRect(self.dist, label_startY, self.window_width-(self.dist*2), label_height))

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setGeometry(QRect(0, 0, 678, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        MainWindow.setWindowIcon(QIcon("icon_logo.png"))

        self.retranslateUi(MainWindow)
        QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SightScan"))
        self.Box_Stadt.setItemText(0, _translate("MainWindow", "Choose City"))
        self.Box_Stadt.setItemText(1, _translate("MainWindow", "Berlin"))
        self.Button_Detection.setText(_translate("MainWindow", "Start Detection"))
        self.Button_Bild.setText(_translate("MainWindow", "Enable File Drop"))

    def show_popup(self):
        if self.Box_Stadt.currentIndex() > 0:
            msg = QMessageBox()
            msg.setWindowTitle("Download City")
            msg.setText("Do you want to download " + self.Box_Stadt.currentText() + "?")
            msg.setIcon(QMessageBox.Question)
            msg.setStandardButtons(QMessageBox.Cancelpip install -r requirements.txt|QMessageBox.Ok)
            msg.setDefaultButton(QMessageBox.Ok)
            msg.setInformativeText("When downloaded sights of " + self.Box_Stadt.currentText() + " can be detected.")

            msg.buttonClicked.connect(self.handover_city)

            x = msg.exec_()

    def handover_city(self, i):
        if i.text() == "OK":
            city = self.Box_Stadt.currentText()
            print(city)
            #start download of model with city

    def start_detection(self):
        print('start detection of ' + self.Label_Bild.image_name)
        #start detection with self.Label_Bild.image_name

    def dragdrop(self):
        if(self.Button_Bild.text() == "Enable File Drop"):
            self.Label_Bild.setAcceptDrops(True)
            self.Label_Bild.setText('\n\n Drop Image here \n\n')
            self.Label_Bild.setStyleSheet('''
                QLabel{
                    border: 4px dashed #aaa
                }
            ''')
            self.Button_Bild.setText(QCoreApplication.translate("MainWindow", "Disable File Drop"))
        elif(self.Button_Bild.text() == "Disable File Drop"):
            self.Label_Bild.setAcceptDrops(False)
            self.Label_Bild.setText("")
            self.Label_Bild.setStyleSheet('')
            self.Label_Bild.setPixmap(QPixmap(self.Label_Bild.image_name))
            self.Label_Bild.image_name = "logo.png"
            self.Button_Bild.setText(QCoreApplication.translate("MainWindow", "Enable File Drop"))

if __name__ == "__main__":
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = UI_MainWindow(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
